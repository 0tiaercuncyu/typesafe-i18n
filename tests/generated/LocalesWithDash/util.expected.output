// This types were auto-generated. Any manual changes will be overwritten.
/* eslint-disable */

import { langaugeLoaderAsync, langaugeStringWrapper } from 'langauge'
import type {
	LangaugeTranslation,
	LangaugeTranslationArgs,
	LangaugeFormatters,
	LangaugeLocale,
} from './LocalesWithDash/types.actual.output'
import { initFormatters } from './LocalesWithDash/formatters-template.actual.output'

export const locales: LangaugeLocale[] = [
	'it-it',
	'en-us',
	'fr-be'
]

const localeTranslationLoaders = {
	'it-it': () => import('./it-it'),
	'en-us': () => import('./en-us'),
	'fr-be': () => import('./fr-be'),
}

export const getTranslationForLocale = async (locale: LangaugeLocale) => (await localeTranslationLoaders[locale]()).default as LangaugeTranslation

export const initLangaugeForLocale = (locale: LangaugeLocale) => langaugeLoaderAsync<LangaugeLocale, LangaugeTranslation, LangaugeTranslationArgs, LangaugeFormatters>(locale, getTranslationForLocale, initFormatters)

export const initLangaugeStringWrapper = (locale: LangaugeLocale) => langaugeStringWrapper(locale, initFormatters(locale))
