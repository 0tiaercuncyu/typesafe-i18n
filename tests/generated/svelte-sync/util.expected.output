// This types were auto-generated. Any manual changes will be overwritten.
/* eslint-disable */

import type { LocaleTranslations } from 'langauge'
import type {
	LangaugeTranslation,
	LangaugeTranslationArgs,
	LangaugeFormatters,
	LangaugeLocales,
} from './langauge-types'
import { getLangaugeInstance, initLangauge } from 'langauge'
import { initFormatters } from './formatters'

import en from './en'

export const localeTranslations: LocaleTranslations<LangaugeLocales, LangaugeTranslation> = {
	en: en as LangaugeTranslation,
}

export const getLocaleTranslations = (locale: LangaugeLocales) => localeTranslations[locale]

export const localeTranslationLoaders = {
	en: () => import('./en'),
}

export const loadLocaleTranslations = async (locale: LangaugeLocales) => (await localeTranslationLoaders[locale]()).default as LangaugeTranslation

export const getLangauge = () => initLangauge<LangaugeLocales, LangaugeTranslation, LangaugeTranslationArgs, LangaugeFormatters>(localeTranslations, initFormatters)

export const getLangaugeForLocale = (locale: LangaugeLocales) => getLangaugeInstance<LangaugeLocales, LangaugeTranslation, LangaugeTranslationArgs, LangaugeFormatters>(locale, localeTranslations, initFormatters)
